#!/command/with-contenv bash
#shellcheck shell=bash

if [[ ${ENABLE_ACARS,,} =~ external ]]; then

  set -o pipefail

  # # Require that acarsdec is running
  # if ! netstat -an | grep -P '^\s*udp\s+\d+\s+\d+\s+(?>\d{1,3}\.{0,1}){4}:\d{1,5}\s+127\.0\.0\.1:5550\s+\w+\s*$' > /dev/null; then
  #   if [ $((MIN_LOG_LEVEL)) -ge 4 ]; then
  #     # shellcheck disable=SC2016
  #     echo "Waiting for acarsdec" | stdbuf -oL awk '{print "[acars_server] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
  #   fi
  #   sleep 1
  #   exit
  # fi

  if true || [[ $((MIN_LOG_LEVEL)) -ge 4 ]]; then
    # shellcheck disable=SC2016
    echo "Starting service" | stdbuf -oL awk '{print "[acars_server] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
  fi

  set -e

  trap 'pkill -P $$' SIGTERM SIGINT SIGHUP SIGQUIT

  # Listens for the output of acarsdec (UDP), and makes it available for multiple processes at TCP port 15550
  # shellcheck disable=SC2016
  {
      socat -T 60 -u udp-listen:5550,fork,reuseaddr stdout | { cat; kill -s INT 0; } \
          | ncat -4 --keep-open --listen 0.0.0.0 15550 | { cat; kill -s INT 0; }
  } 2>&1 | stdbuf -oL awk '{print "[acars_server] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}' &

  wait || true

else
  exec sleep 86400
fi
