#!/usr/bin/with-contenv bash
#shellcheck shell=bash

if [[ -n "${ENABLE_VDLM}" ]]; then

  set -o pipefail

  # Require that vdlm2_server is running
  if ! netstat -an | grep -P '^\s*tcp\s+\d+\s+\d+\s+127\.0\.0\.1:15555\s+(?>\d{1,3}\.{0,1}){4}:\*\s+LISTEN\s*$' > /dev/null; then
    if [ -n "${VERBOSE}" ]; then
        echo "Waiting for vdlm2_server" | stdbuf -o0 awk '{print "[vdlm2_stats] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
    fi
    sleep 1
    exit
  fi
  if [ -n "${VERBOSE}" ]; then
    echo "vdlm2_server ready, starting service" | stdbuf -o0 awk '{print "[vdlm2_stats] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
  fi

  # Start our stats loop
  while true; do
    timeout 300s socat -u TCP:127.0.0.1:15555 CREATE:/run/acars/vdlm2.past5min.json
    echo "$(wc -l < /run/acars/vdlm2.past5min.json) VDLM2 messages received in last 5 mins" | stdbuf -o0 awk '{print "[vdlm2_stats] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
  done
  
else

  # If here then VDLM2 is not enabled, sleep forever
  sleep 86400
fi
