#!/usr/bin/with-contenv bash
#shellcheck shell=bash

# STARTUP SEQUENCE
#  - vdlm2dec does not depend on any services and should start immediately

if [ -n "${ENABLE_VDLM}" ]; then

	VDLM_BIN="/usr/local/bin/vdlm2dec"
	VDLM_CMD=("-J" "-G" "-E" "-U" "-g" "$GAIN" "-i" "$STATION_ID_VDLM")

	if [ -n "${QUIET_LOGS}" ]; then
		VDLM_CMD+=("-l" "/dev/null")
	else
		VDLM_CMD+=("-v")
	fi

	# Send output JSON to vdlm2_server.
	VDLM_CMD+=("-j" "127.0.0.1:5555")
	
	if [ -n "${SERIAL_VDLM}" ]; then

		set -e

		if [ -n "${QUIET_LOGS}" ]; then
			DEVICE_ID="$(rtl_serial_to_deviceid.sh -s "$SERIAL_VDLM")"
		else
			DEVICE_ID="$(rtl_serial_to_deviceid.sh -v -s "$SERIAL_VDLM")"
		fi

		set +e

		VDLM_CMD+=("-r" "$DEVICE_ID")

	else
		echo "[vdlm2dec] No serial number set. Using device index 0. If also running ACARS decoding one of these processes will fail. To fix, set SERIAL_ACARS and SERIAL_VDLM"
		VDLM_CMD+=("-r" "0")
	fi
	
	# shellcheck disable=SC2001
	FREQS_VDLM=$(echo "$FREQS_VDLM" | sed 's/;/ /g')
	# shellcheck disable=SC2206
	VDLM_CMD+=($FREQS_VDLM)

	set -eo pipefail

	echo "[vdlm2dec] Starting: '$VDLM_BIN" "${VDLM_CMD[*]}'"

	# shellcheck disable=SC2016
	"$VDLM_BIN" "${VDLM_CMD[@]}" \
	  2>&1 | stdbuf -o0 sed --unbuffered '/^$/d' | stdbuf -o0 awk '{print "[vdlm2dec] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
else
	sleep 86400
fi

sleep 5
