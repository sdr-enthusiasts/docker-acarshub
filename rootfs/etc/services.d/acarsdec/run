#!/usr/bin/with-contenv bash
#shellcheck shell=bash

# STARTUP SEQUENCE
#  - acarsdec does not depend on any services and should start immediately

if [ -n "${ENABLE_ACARS}" ]; then

	ACARS_BIN="/usr/local/bin/acarsdec"
	ACARS_CMD=("-g" "$GAIN" "-i" "$STATION_ID_ACARS")

	if [ -n "$ACARS_PPM" ]; then
		ACARS_CMD+=("-p" "$ACARS_PPM")
	fi

	if [ -n "${QUIET_LOGS}" ]; then
		ACARS_CMD+=("-o" "0")
		ACARS_CMD+=("-l" "/dev/null")
	else
		ACARS_CMD+=("-o" "4")
		ACARS_CMD+=("-v")
	fi

	# Send output JSON to acars_server
	ACARS_CMD+=("-j" '127.0.0.1:5550')

	if [ -n "${SERIAL_ACARS}" ]; then

		set -e

		if [ -n "${QUIET_LOGS}" ]; then
			DEVICE_ID="$(rtl_serial_to_deviceid.sh -s "$SERIAL_ACARS")"
		else
			DEVICE_ID="$(rtl_serial_to_deviceid.sh -v -s "$SERIAL_ACARS")"
		fi

		set +e

		ACARS_CMD+=("-r" "$DEVICE_ID") 

	else
		echo "[acarsdec] No serial number set. Using device index 0. If also running VDLM decoding one of these processes will fail. To fix, set SERIAL_ACARS and SERIAL_VDLM"
		ACARS_CMD+=("-r" "0")
	fi

	# shellcheck disable=SC2001
    FREQS_ACARS=$(echo "$FREQS_ACARS" | sed 's/;/ /g')
	# shellcheck disable=SC2206
	ACARS_CMD+=($FREQS_ACARS)

	set -eo pipefail

	echo "[acarsdec] Starting: '$ACARS_BIN" "${ACARS_CMD[*]}'"

	# shellcheck disable=SC2016
	"$ACARS_BIN" "${ACARS_CMD[@]}" \
	2>&1  | stdbuf -o0 sed --unbuffered '/^$/d' | stdbuf -o0 awk '{print "[acarsdec] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
else
    sleep 86400
fi

sleep 5
