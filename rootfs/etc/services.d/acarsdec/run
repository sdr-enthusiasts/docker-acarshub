#!/usr/bin/with-contenv bash
#shellcheck shell=bash

ACARS_BIN="/usr/local/bin/acarsdec"
ACARS_CMD=("-o" "4" "-g" "$GAIN" "-i" "$STATION_ID_ACARS")

if [ -n "${ENABLE_ACARS}" ]; then
	# If the process was killed for a log trimming, wait until the trim is done
	while [[ -f /run/acars/stoprun.job ]]; do
		sleep 5
	done
	
	# Below no longer needed, as verbose messages are logged to container log via webapp
	# if [ -n "${VERBOSE}" ]; then
	# 	ACARS_CMD+=("-l" "/run/acars/acars.json")
	# fi

	# Send output JSON to acars splitter.
	ACARS_CMD+=("-j" '127.0.0.1:5550')

	if [ -n "${SERIAL_ACARS}" ]; then

		# If the length of SERIAL_ACARS is greater than 1, then the user has likely put in a serial number
		if [[ "${#SERIAL_ACARS}" -gt 1 ]]; then

			# Resolve serial number of SDR into device ids
			RTL_DEVICE=0
			
			# Get numbers of available RTL-SDR devices
			RTL_DEVICES=$(rtl_eeprom 2>&1 | grep -P '^\s+\d+:' | tr -d ' ' | cut -d ':' -f 1)
			
			# Resolve each number into serial numbers
			for RTL_DEVICE_NUMBER in $RTL_DEVICES; do
				RTL_SERIAL=$(rtl_eeprom -d "$RTL_DEVICE_NUMBER" 2>&1 | grep 'Serial number:' | tr -d '\t' | tr -d ' ' | cut -d ':' -f 2)
				# If the serial number given matches the serial for the device number we're looking at, then set the device number
				if [[ "${#RTL_SERIAL}" = "${#SERIAL_ACARS}" ]]; then
					RTL_DEVICE="$RTL_DEVICE_NUMBER"
					echo "[acarsdec] Using RTL-SDR device number $RTL_DEVICE_NUMBER with serial number $RTL_SERIAL."
				fi
			done
			ACARS_CMD+=("-r" "$RTL_DEVICE")

		else

			ACARS_CMD+=("-r" "$SERIAL_ACARS")

		fi

	else
		echo "[acarsdec] No serial number set. Using device index 0. If also running VDLM decoding one of these processes will fail. To fix, set SERIAL_ACARS and SERIAL_VDLM"
		ACARS_CMD+=("-r" "0")
	fi

	# shellcheck disable=SC2001
    FREQS_ACARS=$(echo "$FREQS_ACARS" | sed 's/;/ /g')
	# shellcheck disable=SC2206
	ACARS_CMD+=($FREQS_ACARS)

	set -eo pipefail

	echo "[acarsdec] Starting: '$ACARS_BIN" "${ACARS_CMD[*]}'"

	# shellcheck disable=SC2016
	"$ACARS_BIN" "${ACARS_CMD[@]}" \
	2>&1  | stdbuf -o0 sed --unbuffered '/^$/d' | stdbuf -o0 awk '{print "[acarsdec] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
else
    sleep 86400
fi